diff --git a/src/SFileOpenArchive.cpp b/src/SFileOpenArchive.cpp
index a896eaf..4f0fe93 100644
--- a/src/SFileOpenArchive.cpp
+++ b/src/SFileOpenArchive.cpp
@@ -228,10 +228,11 @@ bool WINAPI SFileOpenArchive(
 
         // Also remember if this MPQ is a patch
         ha->dwFlags |= (dwFlags & MPQ_OPEN_PATCH) ? MPQ_FLAG_PATCH : 0;
-       
-        // Limit the header searching to about 130 MB of data
-        if(EndOfSearch > 0x08000000)
-            EndOfSearch = 0x08000000;
+
+        // Limit the header searching to about 3 MB of data
+		const ULONGLONG MaxSearch = 3 * 1024 * 1024;
+        if(EndOfSearch > MaxSearch)
+            EndOfSearch = MaxSearch;
 
         // Find the offset of MPQ header within the file
         while(bSearchComplete == false && SearchOffset < EndOfSearch)
diff --git a/src/jenkins/lookup3.c b/src/jenkins/lookup3.c
index 6af56b4..e3f083b 100644
--- a/src/jenkins/lookup3.c
+++ b/src/jenkins/lookup3.c
@@ -292,7 +292,9 @@ uint32_t hashlittle( const void *key, size_t length, uint32_t initval)
   u.ptr = key;
   if (HASH_LITTLE_ENDIAN && ((u.i & 0x3) == 0)) {
     const uint32_t *k = (const uint32_t *)key;         /* read 32-bit chunks */
+#ifdef VALGRIND
     const uint8_t  *k8;
+#endif
 
     /*------ all but last block: aligned reads and affect 32 bits of (a,b,c) */
     while (length > 12)
@@ -477,7 +479,9 @@ void hashlittle2(
   u.ptr = key;
   if (HASH_LITTLE_ENDIAN && ((u.i & 0x3) == 0)) {
     const uint32_t *k = (const uint32_t *)key;         /* read 32-bit chunks */
+#ifdef VALGRIND
     const uint8_t  *k8;
+#endif
 
     /*------ all but last block: aligned reads and affect 32 bits of (a,b,c) */
     while (length > 12)
@@ -654,7 +658,9 @@ uint32_t hashbig( const void *key, size_t length, uint32_t initval)
   u.ptr = key;
   if (HASH_BIG_ENDIAN && ((u.i & 0x3) == 0)) {
     const uint32_t *k = (const uint32_t *)key;         /* read 32-bit chunks */
+#ifdef VALGRIND
     const uint8_t  *k8;
+#endif
 
     /*------ all but last block: aligned reads and affect 32 bits of (a,b,c) */
     while (length > 12)
